{"version":3,"file":"static/js/85.8c79edf1.chunk.js","mappings":"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","sources":["views/Promotion/PromotionDetails.js","../node_modules/@coreui/icons/src/free/cil-vertical-align-bottom.ts"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport { React, useState, useEffect } from 'react'\nimport CIcon from '@coreui/icons-react'\nimport * as icon from '@coreui/icons'\nimport { useNavigate } from 'react-router-dom'\nimport { toast } from 'react-toastify'\nimport axios from 'axios'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { useLocation } from 'react-router-dom'\nimport {\n  CButton,\n  CTable,\n  CTableBody,\n  CTableDataCell,\n  CCard,\n  CCardBody,\n  CFormSelect,\n  CFormLabel,\n  CCardHeader,\n  CCol,\n  CTableHeaderCell,\n  CTableRow,\n  CTableHead,\n  CForm,\n  CModal,\n  CModalHeader,\n  CModalTitle,\n  CModalBody,\n  CModalFooter,\n} from '@coreui/react'\nconst PromotionDetails = () => {\n  const [offset] = useState(0)\n  const [limit] = useState(100)\n  const navigate = useNavigate()\n  const [records, setRecords] = useState([])\n  const [visible, setVisible] = useState(false)\n  const [setFilteredRecords] = useState([])\n  const [formData, setFormData] = useState({\n    admission_number: '',\n    to_academic_year: '',\n    to_class: '',\n    to_section: '',\n    academic_year: '',\n    standard: '',\n    section: '',\n    status: '',\n  })\n\n  const toClass = formData.to_class || ''\n  const toSection = formData.to_section || ''\n\n  const classSection = toClass + toSection\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target\n    setFormData({\n      ...formData,\n      [name]: value,\n    })\n  }\n\n  const handleStatusChange = (row, event) => {\n    const updatedRecords = records.map((record) => {\n      if (record.id === row.id) {\n        return { ...record, status: event.target.value === 'P' ? 'P' : 'F' }\n      }\n      return record\n    })\n    setRecords(updatedRecords)\n  }\n\n  const location = useLocation()\n  const dataToPass = location.state ? location.state.dataToPass : null\n\n  useEffect(() => {\n    if (dataToPass) {\n      axios\n        .get(`http://100.20.130.76:8000/api/student/?offset=${offset}&limit=${limit}`, {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        })\n        .then((res) => {\n          setRecords(res.data.results)\n        })\n        .catch((err) => console.error(err))\n    }\n  }, [dataToPass, limit, offset])\n\n  const handleSubmit = async () => {\n    try {\n      const admissionNumbersToUpdate = records.map((record) => record.admission_number)\n\n      if (admissionNumbersToUpdate) {\n        const dataToSend = records.map((record) => ({\n          status: record.status,\n          admission_number: record.admission_number,\n          student_name: record.student_name,\n          from_class: record.current_class,\n          from_section: record.current_section,\n          from_academic_year: record.academic_year,\n          to_academic_year: formData.to_academic_year,\n          to_class: formData.to_class,\n          to_section: formData.to_section,\n        }))\n\n        const response = await axios.post('http://100.20.130.76:8000/api/promotion/', dataToSend, {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        })\n        console.log('Response from server:', response.data)\n        const secondApiResponse = await axios.put(\n          'http://100.20.130.76:8000/api/promotion/student_update/',\n          {\n            data: {\n              admission_number: admissionNumbersToUpdate,\n              class_section: parseInt(classSection, 10),\n              to_academic_year: formData.to_academic_year,\n            },\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n        )\n        console.log('Response from second API:', secondApiResponse.data)\n        navigate('/PromotionManagement/PromotionDetails')\n        toast.success('Data submitted successfully!', {\n          position: toast.POSITION.TOP_CENTER,\n          timeout: 3000,\n        })\n      } else {\n        // Handle the case where admissionNumbersToUpdate is null or empty\n        // You can add appropriate error handling or logging here\n      }\n    } catch (error) {\n      console.error('Error submitting data:', error)\n      toast.error('Data not submitted!', {\n        position: toast.POSITION.TOP_CENTER,\n        timeout: 3000,\n      })\n    }\n  }\n\n  const handleFilter = () => {\n    // Filter data based on academic year, standard, and section\n    const filtered = records.filter((record) => {\n      return (\n        (!formData.academic_year || record.academic_year === formData.academic_year) &&\n        (!formData.standard || record.standard === formData.standard) &&\n        (!formData.section || record.section === formData.section)\n      )\n    })\n    setFilteredRecords(filtered)\n  }\n\n  const handleDownload = () => {\n    // Simulate downloading CSV data\n    const apiUrl = 'http://100.20.130.76:8000/api/promotion/'\n    const requestData = {\n      academic_year: formData.academic_year,\n      standard: formData.standard,\n      section: formData.section,\n      status: formData.status,\n    }\n\n    axios.get(apiUrl, { params: requestData }).then((response) => {\n      const csvData = response.data.map((record) => {\n        // Format your data into CSV format\n        return `${record.id}, ${record.title}, ${record.body}`\n      })\n\n      // Create a CSV blob and initiate download\n      const csvBlob = new Blob([csvData.join('\\n')], { type: 'text/csv' })\n      const url = window.URL.createObjectURL(csvBlob)\n      const a = document.createElement('a')\n      a.href = url\n      a.download = 'promotion_data.csv'\n      document.body.appendChild(a)\n      a.click()\n      window.URL.revokeObjectURL(url)\n    })\n  }\n\n  return (\n    <CCard>\n      <CCardHeader\n        component=\"h5\"\n        className=\"d-flex align-items-center\"\n        style={{ backgroundColor: 'rgb(242, 242, 242)', borderRadius: 0 }}\n      >\n        {' '}\n        <CIcon icon={icon.cilMenu} size=\"xl\" />\n        Student Promotion\n      </CCardHeader>\n      <CCardBody>\n        <CForm className=\"row g-3\">\n          <CCol xs={3} style={{ marginRight: 55, marginLeft: 50 }}>\n            <CFormLabel\n              htmlFor=\"inputState\"\n              style={{ color: 'rgb(15, 176, 235)', fontWeight: '500', fontSize: '16px' }}\n            >\n              From Academic Year*\n            </CFormLabel>\n            <CFormSelect\n              id=\"inputState\"\n              style={{ borderRadius: 5 }}\n              name=\"to_academic_year\"\n              value={formData.to_academic_year}\n              onChange={handleInputChange}\n            >\n              <option>Select Academic Year</option>\n              <option>2017-2018</option>\n              <option>2018-2019</option>\n              <option>2020-2021</option>\n              <option>2021-2022</option>\n              <option>2022-2023</option>\n            </CFormSelect>\n          </CCol>\n          <CCol xs={3} style={{ marginRight: 55 }}>\n            <CFormLabel\n              htmlFor=\"inputState\"\n              style={{ color: 'rgb(15, 176, 235)', fontWeight: '500', fontSize: '16px' }}\n            >\n              From Academic Class*\n            </CFormLabel>\n            <CFormSelect\n              id=\"inputState\"\n              style={{ borderRadius: 5 }}\n              name=\"to_class\"\n              value={formData.to_class}\n              onChange={handleInputChange}\n            >\n              <option>Select Academic Class</option>\n              <option>1</option>\n              <option>2</option>\n              <option>3</option>\n              <option>4</option>\n              <option>5</option>\n            </CFormSelect>\n          </CCol>\n          <CCol xs={3}>\n            <CFormLabel\n              htmlFor=\"inputState\"\n              style={{ color: 'rgb(15, 176, 235)', fontWeight: '500', fontSize: '16px' }}\n            >\n              From Academic Section*\n            </CFormLabel>\n            <CFormSelect\n              id=\"inputState\"\n              style={{ borderRadius: 5 }}\n              name=\"to_section\"\n              value={formData.to_section}\n              onChange={handleInputChange}\n            >\n              <option>Select Academic Section</option>\n              <option>A</option>\n              <option>B</option>\n              <option>C</option>\n              <option>D</option>\n              <option>E</option>\n            </CFormSelect>\n          </CCol>\n          <CCol xs={11} className=\"d-flex justify-content-end\">\n            <CButton\n              style={{\n                marginTop: 30,\n                marginRight: 18,\n                width: 150,\n                backgroundColor: '#1985AC',\n                color: 'white',\n                border: 'none',\n              }}\n              onClick={() => setVisible(!visible)}\n              onChange={handleFilter}\n            >\n              Download\n            </CButton>\n            <CModal\n              visible={visible}\n              onClose={() => setVisible(false)}\n              aria-labelledby=\"LiveDemoExampleLabel\"\n            >\n              <CModalHeader onClose={() => setVisible(false)}>\n                <CModalTitle id=\"LiveDemoExampleLabel\">Download CSV</CModalTitle>\n              </CModalHeader>\n              <CModalBody>\n                <CForm className=\"row gy-2 gx-3 align-items-center\" style={{ paddingBottom: '2%' }}>\n                  <CCol xs=\"auto\">\n                    <CFormLabel\n                      htmlFor=\"academic_year\"\n                      style={{ fontWeight: '500', fontSize: '16px' }}\n                    >\n                      Academic Year\n                    </CFormLabel>\n                    <CFormSelect\n                      id=\"academic_year\"\n                      name=\"academic_year\"\n                      value={formData.academic_year}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"\">Academic Year</option>\n                      <option value=\"2017-2018\">2017-2018</option>\n                      <option value=\"2018-2019\">2018-2019</option>\n                      <option value=\"2019-2020\">2019-2020</option>\n                      <option value=\"2020-2021\">2020-2021</option>\n                      <option value=\"2021-2022\">2021-2022</option>\n                      <option value=\"2022-2023\">2022-2023</option>\n                    </CFormSelect>\n                  </CCol>\n                  <CCol xs=\"auto\">\n                    <CFormLabel\n                      htmlFor=\"standard\"\n                      style={{ fontWeight: '500', fontSize: '16px' }}\n                    >\n                      Standard\n                    </CFormLabel>\n                    <CFormSelect\n                      id=\"standard\"\n                      name=\"standard\"\n                      value={formData.standard}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"\">Select class</option>\n                      <option value=\"LKG\">LKG</option>\n                      <option value=\"UKG\">UKG</option>\n                      <option value=\"1\">1</option>\n                      <option value=\"2\">2</option>\n                      <option value=\"3\">3</option>\n                      <option value=\"4\">4</option>\n                      <option value=\"5\">5</option>\n                      <option value=\"6\">6</option>\n                      <option value=\"7\">7</option>\n                      <option value=\"8\">8</option>\n                      <option value=\"9\">9</option>\n                      <option value=\"10\">10</option>\n                    </CFormSelect>\n                  </CCol>\n                  <CCol xs=\"auto\">\n                    <CFormLabel\n                      htmlFor=\"section\"\n                      style={{ fontWeight: '500', fontSize: '16px' }}\n                    >\n                      Section\n                    </CFormLabel>\n                    <CFormSelect\n                      id=\"section\"\n                      name=\"section\"\n                      value={formData.section}\n                      onChange={handleInputChange}\n                    >\n                      <option value=\"\">Select section</option>\n                      <option value=\"A\">A</option>\n                      <option value=\"B\">B</option>\n                      <option value=\"C\">C</option>\n                      <option value=\"D\">D</option>\n                      <option value=\"E\">E</option>\n                      <option value=\"F\">F</option>\n                      <option value=\"G\">G</option>\n                      <option value=\"H\">H</option>\n                      <option value=\"I\">I</option>\n                    </CFormSelect>\n                  </CCol>\n                </CForm>\n              </CModalBody>\n              <CModalFooter>\n                <CButton color=\"secondary\" onClick={handleDownload}>\n                <CIcon icon={icon.cilVerticalAlignBottom} size=\"l\" />\n                  Download\n                </CButton>\n              </CModalFooter>\n            </CModal>\n            <CButton\n              onClick={handleSubmit}\n              style={{\n                marginTop: 30,\n                marginRight: 18,\n                width: 150,\n                backgroundColor: '#1985AC',\n                color: 'white',\n                border: 'none',\n              }}\n            >\n              Submit\n            </CButton>\n          </CCol>\n        </CForm>\n        <br></br>\n        <CTable striped>\n          <CTableHead>\n            <CTableRow style={{ borderBottom: 5, color: 'primary' }}>\n              <CTableHeaderCell scope=\"col\">Admission Number</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Student Name</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Class</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Section</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Academic Year</CTableHeaderCell>\n              <CTableHeaderCell scope=\"col\">Status</CTableHeaderCell>\n            </CTableRow>\n          </CTableHead>\n          <CTableBody>\n            {records.map((record, index) => (\n              <CTableRow key={index}>\n                <CTableDataCell>{record.admission_number}</CTableDataCell>\n                <CTableDataCell>{record.student_name}</CTableDataCell>\n                <CTableDataCell>{record.current_class}</CTableDataCell>\n                <CTableDataCell>{record.current_section}</CTableDataCell>\n                <CTableDataCell>{record.academic_year}</CTableDataCell>\n                <CTableDataCell>\n                  <CFormSelect\n                    id=\"inputState\"\n                    style={{ borderRadius: 0 }}\n                    name=\"status\"\n                    value={record.status}\n                    onChange={(e) => handleStatusChange(record, e)}\n                  >\n                    <option value=\"P\">Pass</option>\n                    <option value=\"F\">Fail</option>\n                  </CFormSelect>\n                </CTableDataCell>\n              </CTableRow>\n            ))}\n          </CTableBody>\n        </CTable>\n      </CCardBody>\n    </CCard>\n  )\n}\n\nexport default PromotionDetails\n","export var cilVerticalAlignBottom = [\"512 512\", \"<polygon fill='var(--ci-primary-color, currentColor)' points='356.117 316.117 333.49 293.49 272 354.98 272 56 240 56 240 354.98 178.51 293.49 155.883 316.117 256 416.236 356.117 316.117' class='ci-primary'/><rect width='480' height='32' x='16' y='464' fill='var(--ci-primary-color, currentColor)' class='ci-primary'/>\"];\n"],"names":["_useState","useState","offset","_slicedToArray","_useState3","limit","navigate","useNavigate","_useState5","_useState6","records","setRecords","_useState7","_useState8","visible","setVisible","_useState9","setFilteredRecords","_useState11","admission_number","to_academic_year","to_class","to_section","academic_year","standard","section","status","_useState12","formData","setFormData","classSection","handleInputChange","e","_e$target","target","name","value","_objectSpread","_defineProperty","location","useLocation","dataToPass","state","useEffect","axios","get","concat","headers","then","res","data","results","catch","err","console","error","handleSubmit","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","admissionNumbersToUpdate","dataToSend","response","secondApiResponse","wrap","_context","prev","next","map","record","student_name","from_class","current_class","from_section","current_section","from_academic_year","post","sent","log","put","class_section","parseInt","toast","success","position","POSITION","TOP_CENTER","timeout","t0","stop","apply","arguments","_jsxs","CCard","children","CCardHeader","component","className","style","backgroundColor","borderRadius","_jsx","CIcon","icon","size","CCardBody","CForm","CCol","xs","marginRight","marginLeft","CFormLabel","htmlFor","color","fontWeight","fontSize","CFormSelect","id","onChange","CButton","marginTop","width","border","onClick","filtered","filter","CModal","onClose","CModalHeader","CModalTitle","CModalBody","paddingBottom","CModalFooter","requestData","params","csvData","title","body","csvBlob","Blob","join","type","url","window","URL","createObjectURL","a","document","createElement","href","download","appendChild","click","revokeObjectURL","CTable","striped","CTableHead","CTableRow","borderBottom","CTableHeaderCell","scope","CTableBody","index","CTableDataCell","row","event","updatedRecords","handleStatusChange","cilVerticalAlignBottom"],"sourceRoot":""}